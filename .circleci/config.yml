version: 2.1

workflows:
  build:
    jobs:
      - build:
          context:
            - circleci-api
            - ngviz

jobs:
  build:
    docker:
      - image: cimg/node:18.16.0
    steps:
      - checkout
      # look for existing cache and restore if found
      - restore_cache:
          keys: 
            - v1-deps-{{ checksum "package-lock.json" }}
            # CircleCI will use the static fallback key v1-deps- to load the most recent valid cache
            - v1-deps- 
      # install dependencies
      - run:
          name: Install dependencies
          command: |
            npm install
            npm audit
      # save any changes to the cache
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths: 
            - node_modules   
      - run:
          name: Run build
          command: npm run build
      - when:
          condition:
            equal: [ master, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Publish package
                command: npm publish --tag next
            - run:
                name: Trigger ngviz-server to deploy ngviz assets to blob storage
                command: |
                  curl --request POST https://circleci.com/api/v2/project/gh/Displayr/ngviz-server/pipeline \
                    --header "Circle-Token: $CIRCLE_API_TOKEN" \
                    --header "content-type: application/json" \
                    --data  '{"branch":"master","parameters":{"deploy-blobs":true, "deploy-blobs-tag": "next"}}'
            - run:
                name: Trigger ngviz-server to update latest tag
                command: |
                  curl --request POST https://circleci.com/api/v2/project/gh/Displayr/ngviz-server/pipeline \
                    --header "Circle-Token: $CIRCLE_API_TOKEN" \
                    --header "content-type: application/json" \
                    --data  "{\"branch\":\"master\",\"parameters\":{\"update-latest-package-name\": $(npm pkg get name), \"update-latest-package-version\": $(npm pkg get version)}}"